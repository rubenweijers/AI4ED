{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rubenweijers/Desktop/AI4ED/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/rubenweijers/Desktop/AI4ED/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/rubenweijers/Desktop/AI4ED/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      questions: [{\n        n: 1,\n        questionText: \"I have strong beliefs about what is right and wrong, good and bad\",\n        type: \"radio\"\n      }\n      // { n:2, questionText: \"I often act without considering the possible consequences.\", type: \"radio\" },\n      // { n:3, questionText: \"I tend to solve problems using a step-by-step approach.\", type: \"radio\"},\n      // { n:4, questionText: \"I believe that formal procedures and policies restrict people.\", type: \"radio\"},\n      // { n:5, questionText: \"I have a reputation for saying what I think, simply and directly.\", type: \"radio\"},\n      // { n:6, questionText: \"I often find that actions based on feelings are as sound as those based on careful thought and analysis.\", type: \"radio\"},\n      // { n:7, questionText: \"I like the sort of work where I have time for thorough preparation and implementation.\", type: \"radio\"},\n      ],\n      answers: {}\n    };\n  },\n  methods: {\n    submitQuestionnaire: function submitQuestionnaire() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userId, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Submitting Answers:', _this.answers);\n\n              // REPLACE WITH USER ID\n              userId = 'hardcoded-user-id';\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post('/api/questionnaire/submit', _objectSpread({\n                userId: userId\n              }, _this.answers));\n            case 5:\n              response = _context.sent;\n              console.log('Submission successful:', response.data);\n              // TODO: Handle success (e.g., show a success message, navigate to another page)\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Submission failed:', _context.t0.response ? _context.t0.response.data : _context.t0.message);\n              // TODO: Handle error (e.g., display an error message to the user)\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9]]);\n      }))();\n    },\n    // Toggle checkbox upon click\n    toggleCheckbox: function toggleCheckbox(questionText, option) {\n      // This time, only set the opposite option to false\n      var oppositeOption = option === 'Agree' ? '-disagree' : '-agree';\n      this.answers[questionText + oppositeOption] = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questions","n","questionText","type","answers","methods","submitQuestionnaire","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","response","wrap","_callee$","_context","prev","next","console","log","post","_objectSpread","sent","t0","error","message","stop","toggleCheckbox","option","oppositeOption"],"sources":["/Users/rubenweijers/Desktop/AI4ED/src/views/Study.vue"],"sourcesContent":["<template>\n    <div class=\"study-container\">\n      <h2>Study Questionnaire</h2>\n      <form @submit.prevent=\"submitQuestionnaire\">\n          <div v-for=\"(question, index) in questions\" :key=\"index\">\n            <label :for=\"'question-' + index\">{{ question.n }}. {{ question.questionText }}</label>\n            <div class=\"options\"> \n                <input type=\"checkbox\" \n                    :id=\"'question-' + index + '-agree'\" \n                    :value=\"question.questionText + '-agree'\"\n                    v-model=\"answers[question.questionText + '-agree']\"\n                    @click=\"toggleCheckbox(question.questionText, 'Agree')\">\n                <label :for=\"'question-' + index + '-agree'\">Agree</label>\n\n                <input type=\"checkbox\" \n                    :id=\"'question-' + index + '-disagree'\" \n                    :value=\"question.questionText + '-disagree'\" \n                    v-model=\"answers[question.questionText + '-disagree']\"\n                    @click=\"toggleCheckbox(question.questionText, 'Disagree')\">\n                <label :for=\"'question-' + index + '-disagree'\">Disagree</label>\n            </div>\n            </div>\n        <button type=\"submit\" class=\"submit-button\">Submit Questionnaire</button>\n      </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n        questions: [\n            { n:1, questionText: \"I have strong beliefs about what is right and wrong, good and bad\", type: \"radio\" },\n            // { n:2, questionText: \"I often act without considering the possible consequences.\", type: \"radio\" },\n            // { n:3, questionText: \"I tend to solve problems using a step-by-step approach.\", type: \"radio\"},\n            // { n:4, questionText: \"I believe that formal procedures and policies restrict people.\", type: \"radio\"},\n            // { n:5, questionText: \"I have a reputation for saying what I think, simply and directly.\", type: \"radio\"},\n            // { n:6, questionText: \"I often find that actions based on feelings are as sound as those based on careful thought and analysis.\", type: \"radio\"},\n            // { n:7, questionText: \"I like the sort of work where I have time for thorough preparation and implementation.\", type: \"radio\"},\n        ],\n        answers: {}\n        }\n    },\n    methods: {\n      async submitQuestionnaire() {\n            console.log('Submitting Answers:', this.answers);\n\n            // REPLACE WITH USER ID\n            const userId = 'hardcoded-user-id';\n\n            try {\n                const response = await axios.post('/api/questionnaire/submit', { userId, ...this.answers });\n                console.log('Submission successful:', response.data);\n                // TODO: Handle success (e.g., show a success message, navigate to another page)\n            } catch (error) {\n                console.error('Submission failed:', error.response ? error.response.data : error.message);\n                // TODO: Handle error (e.g., display an error message to the user)\n            }\n        },\n        // Toggle checkbox upon click\n        toggleCheckbox(questionText, option) {\n            // This time, only set the opposite option to false\n            const oppositeOption = option === 'Agree' ? '-disagree' : '-agree';\n            this.answers[questionText + oppositeOption] = false;\n        },\n  }\n};\n</script>\n\n<style scoped>\n.study-container { /* A wrapper for the entire questionnaire */\n  max-width: 600px; /* Limit width for better readability */\n  margin: 50px auto; /* Center the form */\n  padding: 30px;\n  background-color: #fff; /* Light background */\n  border-radius: 8px;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n  text-align: left;\n}\n\n.study-container h2 { /* Add a heading */\n  text-align: center;\n  margin-bottom: 20px;\n  color: rgb(29, 29, 184); \n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 600;\n}\n\ninput[type=\"text\"], textarea, select {\n  width: 100%; \n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box; \n} \n\n.options {\n    display: flex;\n    flex-direction: column;\n    /* justify-content: flex-start; */\n    margin-top: -10px;\n    margin-bottom: 50px;\n}\n\n.options label {\n    margin-bottom: -10px;\n}\n\n.options input[type=\"checkbox\"] {\n  /* Hide the default checkbox */\n  opacity: 0; \n  position: left; \n}\n\n.options input[type=\"checkbox\"] + label::before {\n  content: '';\n  display: inline-block;\n  width: 18px; \n  height: 18px;\n  margin-right: 10px; \n  border: 1px solid #ddd;\n  border-radius: 3px; \n  background-color: #fff;\n}\n\n.options input[type=\"checkbox\"]:checked + label::before {\n  background-color: rgb(29, 29, 184); \n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\"); \n  background-size: 10px;\n}\n\n.submit-button {\n  background-color: rgb(29, 29, 184);  /* Main button color */\n  color: white;                       /* Text color */\n  border: none;\n  border-radius: 5px;                 /* Slightly rounded corners */\n  padding: 12px 30px;                 /* Adjust padding as needed */\n  cursor: pointer;\n  transition: background-color 0.3s;  /* Smooth hover transition */\n}\n\n.submit-button:hover {\n  background-color: rgb(23, 23, 250); /* Slightly darker on hover  */\n  transform: translateY(-3px); /* Moves the button slightly upwards */\n}\n\n</style>"],"mappings":";;;AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACPC,SAAS,EAAE,CACP;QAAEC,CAAC,EAAC,CAAC;QAAEC,YAAY,EAAE,mEAAmE;QAAEC,IAAI,EAAE;MAAQ;MACxG;MACA;MACA;MACA;MACA;MACA;MAAA,CACH;MACDC,OAAO,EAAE,CAAC;IACV;EACJ,CAAC;EACDC,OAAO,EAAE;IACDC,mBAAmB,WAAAA,oBAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEb,KAAI,CAACH,OAAO,CAAC;;cAEhD;cACMQ,MAAK,GAAI,mBAAmB;cAAAI,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGPpB,KAAK,CAACuB,IAAI,CAAC,2BAA2B,EAAAC,aAAA;gBAAIV,MAAM,EAANA;cAAM,GAAKL,KAAI,CAACH,OAAM,CAAG,CAAC;YAAA;cAArFS,QAAO,GAAAG,QAAA,CAAAO,IAAA;cACbJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,QAAQ,CAACd,IAAI,CAAC;cACpD;cAAAiB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;cAEAG,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAET,QAAA,CAAAQ,EAAA,CAAMX,QAAO,GAAIG,QAAA,CAAAQ,EAAA,CAAMX,QAAQ,CAACd,IAAG,GAAIiB,QAAA,CAAAQ,EAAA,CAAME,OAAO,CAAC;cACzF;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IAER,CAAC;IACD;IACAiB,cAAc,WAAAA,eAAC1B,YAAY,EAAE2B,MAAM,EAAE;MACjC;MACA,IAAMC,cAAa,GAAID,MAAK,KAAM,OAAM,GAAI,WAAU,GAAI,QAAQ;MAClE,IAAI,CAACzB,OAAO,CAACF,YAAW,GAAI4B,cAAc,IAAI,KAAK;IACvD;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}