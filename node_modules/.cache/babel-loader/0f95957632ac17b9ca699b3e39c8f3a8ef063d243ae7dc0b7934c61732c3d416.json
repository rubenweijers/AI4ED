{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"study-container\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Study Questionnaire\")], -1 /* HOISTED */);\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = [\"id\", \"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"id\", \"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"id\", \"onUpdate:modelValue\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit Questionnaire\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.submitQuestionnaire && $options.submitQuestionnaire(...args), [\"prevent\"]))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"label\", {\n      for: 'question-' + index\n    }, _toDisplayString(question.questionText), 9 /* TEXT, PROPS */, _hoisted_2), question.type === 'text' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      id: 'question-' + index,\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.answers[question.questionText] = $event\n    }, null, 8 /* PROPS */, _hoisted_3)), [[_vModelText, $data.answers[question.questionText]]]) : question.type === 'textarea' ? _withDirectives((_openBlock(), _createElementBlock(\"textarea\", {\n      key: 1,\n      id: 'question-' + index,\n      \"onUpdate:modelValue\": $event => $data.answers[question.questionText] = $event\n    }, null, 8 /* PROPS */, _hoisted_4)), [[_vModelText, $data.answers[question.questionText]]]) : question.type === 'select' ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 2,\n      id: 'question-' + index,\n      \"onUpdate:modelValue\": $event => $data.answers[question.questionText] = $event\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.options, option => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: option\n      }, _toDisplayString(option), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_5)), [[_vModelSelect, $data.answers[question.questionText]]]) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_6], 32 /* NEED_HYDRATION */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","type","_createElementBlock","_Fragment","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","submitQuestionnaire","_renderList","$data","questions","question","index","key","for","questionText","_hoisted_2","id","$event","answers","_hoisted_3","_hoisted_4","options","option","_toDisplayString","_hoisted_5","_createCommentVNode","_hoisted_6"],"sources":["/Users/rubenweijers/Desktop/ai-ed/src/views/Study.vue"],"sourcesContent":["<template>\n    <div class=\"study-container\">\n        <h2>Study Questionnaire</h2>\n    </div>\n    <form @submit.prevent=\"submitQuestionnaire\">\n      <div v-for=\"(question, index) in questions\" :key=\"index\">\n        <label :for=\"'question-' + index\">{{ question.questionText }}</label>\n        <input v-if=\"question.type === 'text'\" \n               :id=\"'question-' + index\" \n               type=\"text\"\n               v-model=\"answers[question.questionText]\"> </input>\n        <textarea v-else-if=\"question.type === 'textarea'\"\n                  :id=\"'question-' + index\" \n                  v-model=\"answers[question.questionText]\"></textarea>\n        <select v-else-if=\"question.type === 'select'\"\n                  :id=\"'question-' + index\" \n                  v-model=\"answers[question.questionText]\"> \n              <option v-for=\"option in question.options\" :key=\"option\">\n                {{ option }}\n              </option>\n        </select>\n      </div>\n      <button type=\"submit\">Submit Questionnaire</button>\n    </form>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n        questions: [\n            { questionText: \"What is your age?\", type: \"text\" },\n            { questionText: \"Describe your experience with...\", type: \"textarea\" },\n            { questionText: \"Select your favorite color:\", type: \"select\", options: [\"Blue\", \"Green\", \"Yellow\"] },\n        ],\n        answers: {}\n        }\n    },\n    methods: {\n        submitQuestionnaire() {\n        // Here you will implement the fetch/Axios call in the next steps.\n        console.log('Submitting Answers:', this.answers); // Placeholder for now\n        }\n    }\n    }\n</script>\n\n<style>\n\n<style scoped>\n.study-container { /* A wrapper for the entire questionnaire */\n  max-width: 600px; /* Limit width for better readability */\n  margin: 50px auto; /* Center the form */\n  padding: 30px;\n  background-color: #fff; /* Light background */\n  border-radius: 8px;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n}\n\n.study-container h2 { /* Add a heading */\n  text-align: center;\n  margin-bottom: 20px;\n  color: rgb(29, 29, 184); \n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 600;\n}\n\ninput[type=\"text\"], textarea, select {\n  width: 100%; \n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box; \n} \n\n</style>"],"mappings":";gCACIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAiB,I,aACxBD,mBAAA,CAA4B,YAAxB,qBAAmB,E;mBAF/B;mBAAA;mBAAA;mBAAA;gCAsBMA,mBAAA,CAAmD;EAA3CE,IAAI,EAAC;AAAQ,GAAC,sBAAoB;;uBAtBhDC,mBAAA,CAAAC,SAAA,SACIC,UAEM,EACNL,mBAAA,CAmBO;IAnBAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAF,IAAA,CAAmB;yBACxCN,mBAAA,CAgBMC,SAAA,QArBZQ,WAAA,CAKuCC,KAAA,CAAAC,SAAS,EALhD,CAKmBC,QAAQ,EAAEC,KAAK;yBAA5Bb,mBAAA,CAgBM;MAhBuCc,GAAG,EAAED;IAAK,IACrDhB,mBAAA,CAAqE;MAA7DkB,GAAG,gBAAgBF;wBAAUD,QAAQ,CAACI,YAAY,wBANlEC,UAAA,GAOqBL,QAAQ,CAACb,IAAI,c,+BAA1BC,mBAAA,CAGgD;MAVxDc,GAAA;MAQgBI,EAAE,gBAAgBL,KAAK;MACxBd,IAAI,EAAC,MAAM;MAT1B,uBAAAoB,MAAA,IAUwBT,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,IAAAG;4BAVrDE,UAAA,K,cAUwBX,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,G,IACxBJ,QAAQ,CAACb,IAAI,kB,+BAAlCC,mBAAA,CAE8D;MAbtEc,GAAA;MAYmBI,EAAE,gBAAgBL,KAAK;MAZ1C,uBAAAM,MAAA,IAa2BT,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,IAAAG;4BAbxDG,UAAA,K,cAa2BZ,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,G,IAC7BJ,QAAQ,CAACb,IAAI,gB,+BAAhCC,mBAAA,CAMS;MApBjBc,GAAA;MAemBI,EAAE,gBAAgBL,KAAK;MAf1C,uBAAAM,MAAA,IAgB2BT,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,IAAAG;2BAC1CnB,mBAAA,CAESC,SAAA,QAnBvBQ,WAAA,CAiBuCG,QAAQ,CAACW,OAAO,EAA1BC,MAAM;2BAArBxB,mBAAA,CAES;QAFmCc,GAAG,EAAEU;MAAM,GAAAC,gBAAA,CAClDD,MAAM;oDAlBzBE,UAAA,K,gBAgB2BhB,KAAA,CAAAU,OAAO,CAACR,QAAQ,CAACI,YAAY,G,IAhBxDW,mBAAA,e;kCAsBMC,UAAmD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}