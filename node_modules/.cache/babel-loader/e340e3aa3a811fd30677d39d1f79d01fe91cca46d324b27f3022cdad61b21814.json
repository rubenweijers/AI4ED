{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rubenweijers/Desktop/AI4ED/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/rubenweijers/Desktop/AI4ED/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      error: null // To store error messages from the backend\n    };\n  },\n  methods: {\n    signup: function signup() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.error = null; // Clear any previous errors\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('/api/signup', {\n                username: _this.username,\n                password: _this.password\n              });\n            case 4:\n              response = _context.sent;\n              // Handle successful signup\n              console.log('Signup successful:', response.data);\n\n              // Clear the form\n              _this.username = '';\n              _this.password = '';\n\n              // Redirect to login or display a success message\n              _this.$router.push('/login');\n              console.log('Signup response:', response);\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              if (_context.t0.response && _context.t0.response.data) {\n                _this.error = _context.t0.response.data; // Display error from the backend\n              } else {\n                _this.error = \"An error occurred during signup.\"; // Generic error message\n              }\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 12]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","error","methods","signup","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","sent","console","log","$router","push","t0","stop"],"sources":["/Users/rubenweijers/Desktop/AI4ED/src/views/Signup.vue"],"sourcesContent":["<template>\n    <div class=\"form-container\">\n      <h2>Sign Up</h2>\n      <form @submit.prevent=\"signup\">\n        <div class=\"form-group\">\n          <label for=\"username\">Name:</label>\n          <input type=\"text\" id=\"username\" v-model=\"username\" placeholder=\"Enter your name\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password:</label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"Password\" required>\n        </div>\n  \n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n  \n        <button type=\"submit\" class=\"submit-btn\">Sign Up</button>\n      </form>\n    </div>\n</template>\n  \n<script>\nimport axios from 'axios';\n  \nexport default {\ndata() {\n    return {\n    username: '',\n    password: '',\n    error: null, // To store error messages from the backend\n    };\n},\nmethods: {\n    async signup() {\n    this.error = null; // Clear any previous errors\n\n    try {\n        const response = await axios.post('/api/signup', {\n        username: this.username,\n        password: this.password,\n        });\n\n        // Handle successful signup\n        console.log('Signup successful:', response.data);\n\n        // Clear the form\n        this.username = '';\n        this.password = '';\n\n        // Redirect to login or display a success message\n        this.$router.push('/login');  \n        console.log('Signup response:', response);\n    } catch (error) {\n        if (error.response && error.response.data) {\n        this.error = error.response.data; // Display error from the backend\n        } else {\n        this.error = \"An error occurred during signup.\"; // Generic error message\n        }\n    }\n    },\n},\n};\n\n</script>\n  \n  <style scoped>\n  /* Your existing styles or add new styles for error messages */\n  .error-message {\n    color: red;\n  }\n  </style>\n  "],"mappings":";;;AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACfC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACPC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI,CAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACCC,MAAM,WAAAA,OAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACfV,KAAI,CAACH,KAAI,GAAI,IAAI,EAAE;cAAAW,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGQjB,KAAK,CAACkB,IAAI,CAAC,aAAa,EAAE;gBACjDhB,QAAQ,EAAEK,KAAI,CAACL,QAAQ;gBACvBC,QAAQ,EAAEI,KAAI,CAACJ;cACf,CAAC,CAAC;YAAA;cAHIS,QAAO,GAAAG,QAAA,CAAAI,IAAA;cAKb;cACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAET,QAAQ,CAACX,IAAI,CAAC;;cAEhD;cACAM,KAAI,CAACL,QAAO,GAAI,EAAE;cAClBK,KAAI,CAACJ,QAAO,GAAI,EAAE;;cAElB;cACAI,KAAI,CAACe,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;cAC3BH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAET,QAAQ,CAAC;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEzC,IAAIA,QAAA,CAAAS,EAAA,CAAMZ,QAAO,IAAKG,QAAA,CAAAS,EAAA,CAAMZ,QAAQ,CAACX,IAAI,EAAE;gBAC3CM,KAAI,CAACH,KAAI,GAAIW,QAAA,CAAAS,EAAA,CAAMZ,QAAQ,CAACX,IAAI,EAAE;cAClC,OAAO;gBACPM,KAAI,CAACH,KAAI,GAAI,kCAAkC,EAAE;cACjD;YAAA;YAAA;cAAA,OAAAW,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEJ;EACJ;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}